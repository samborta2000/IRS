// Collect dimension of bulb section and convert to angle section
// Calculate cross sectional area and area moment of inertia
// The process of calculating dimension of the equivalent angle section must be written into a distinct function

using System;

class Problem_1 
{
  public static void Main (string[] args) 
  {
    Console.WriteLine ("Enter net height of the bulb (in mm)");
    double height = Convert.ToDouble(Console.ReadLine());
    Console.WriteLine ("Enter net width of the bulb (in mm)");
    double width = Convert.ToDouble(Console.ReadLine());

    double[] vals = Problem_1.convert(height, width);

    double hw = vals[0];
    double tw = vals[1];
    double bf = vals[2];
    double tf = vals[3];

    Console.WriteLine ("Web Height = "+hw+"\nWeb Thickness = "+tw+"\nFlange Width = "+bf+"\nFlange Thickness = "+tf);
    
    double area = Problem_1.properties(1, hw, tw, bf, tf);
    double MOI = Problem_1.properties(0, hw, tw, bf, tf);

    Console.WriteLine ("Cross sectional area = "+area);
    Console.WriteLine ("Moment of Inertia about Neutral Axis = "+MOI);
  }
  public static double[] convert(double hw, double tw)
  {
    double alpha = 1.1 + (Math.Pow((120-hw),2)/3000);
    if ( hw > 120 )
    {
      alpha = 1.0 ;
    }
    
    double[] converted_values = new double[4];
    converted_values[0] = hw - (hw/9.2) + 2 ;
    converted_values[1] = tw ;
    converted_values[2] = (tw + (hw/6.7) - 2)*alpha ;
    converted_values[3] = (hw/9.2) - 2 ;

    return converted_values;
  }
  public static double properties (int opt, double hw, double tw, double bf, double tf)
  {
    double area = (tf*bf) + (hw*tw) ;
    double na = ((tf*bf)*(hw+tf/2) + (hw*tw)*(hw/2))/area ;
    double AH2 = ((tf*bf)*Math.Pow((hw+tf/2)-na,2) + (hw*tw)*Math.Pow((hw/2)-na,2)) ;
    double MOI = (bf*Math.Pow(bf,3)/12) + (tw*Math.Pow((tw-tf),3)/12) + AH2 ;
    if (opt == 1)
    {
      return area ;
    }
    else
    {
      return MOI ;
    }
  }
}
